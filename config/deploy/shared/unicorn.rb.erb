worker_processes <%= fetch(:unicorn_worker_processes) %>
user "<%= fetch(:deploy_user) %>", "<%= fetch(:deploy_user) %>"
working_directory "<%= current_path %>"
listen "<%= shared_path %>/tmp/sockets/unicorn.sock"

timeout 80

preload_app true

pid "<%= shared_path %>/tmp/pids/unicorn.pid"

stderr_path "<%= shared_path %>/log/unicorn.stderr.log"
stdout_path "<%= shared_path %>/log/unicorn.stdout.log"

GC.respond_to?(:copy_on_write_friendly=) and
  GC.copy_on_write_friendly = true

before_fork do |server, worker|
   old_pid = "#{server.config[:pid]}.oldbin"
   if File.exists?(old_pid) && server.pid != old_pid
      begin
         Process.kill("QUIT", File.read(old_pid).to_i)
      rescue Errno::ENOENT, Errno::ESRCH
      end
   end
end

after_fork do |server, worker|
  defined?(ActiveRecord::Base) and
    ActiveRecord::Base.establish_connection
end

before_exec do |server|
  ENV['BUNDLE_GEMFILE'] = "<%= current_path %>/Gemfile"
end
